name: Setup Repository Protection

on:
  workflow_dispatch:
    inputs:
      setup_branches:
        description: 'Create develop branch and setup protection'
        required: false
        default: 'true'
        type: boolean
  push:
    branches:
      - master
    paths:
      - '.github/workflows/setup-repository-protection.yml'

permissions:
  contents: write
  administration: write
  pull-requests: write

jobs:
  setup-repository-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if develop branch exists
        id: check_develop
        run: |
          if git ls-remote --heads origin develop | grep -q develop; then
            echo "develop_exists=true" >> $GITHUB_OUTPUT
          else
            echo "develop_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create develop branch
        if: steps.check_develop.outputs.develop_exists == 'false' && github.event.inputs.setup_branches != 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b develop
          git push -u origin develop

      - name: Setup Branch Naming Ruleset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Setting up branch naming ruleset..."
          
          # Create branch naming ruleset via GitHub API
          cat << 'EOF' > branch_naming_ruleset.json
          {
            "name": "Branch Naming Convention",
            "target": "branch",
            "enforcement": "active",
            "conditions": {
              "ref_name": {
                "include": ["**"],
                "exclude": ["master", "main", "develop", "feature/**", "bugfix/**", "patch/**"]
              }
            },
            "rules": [
              {
                "type": "creation",
                "parameters": {
                  "restricted": true
                }
              }
            ],
            "bypass_actors": [
              {
                "actor_id": 1,
                "actor_type": "RepositoryRole",
                "bypass_mode": "always"
              }
            ]
          }
          EOF
          
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/rulesets" \
            -d @branch_naming_ruleset.json || echo "Branch naming ruleset creation failed or already exists"

      - name: Setup Protected Branch Ruleset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Setting up protected branch ruleset..."
          
          # Create protected branch ruleset via GitHub API
          cat << 'EOF' > protected_branch_ruleset.json
          {
            "name": "Protected Branches",
            "target": "branch", 
            "enforcement": "active",
            "conditions": {
              "ref_name": {
                "include": ["master", "develop"]
              }
            },
            "rules": [
              {
                "type": "pull_request",
                "parameters": {
                  "require_code_owner_review": false,
                  "require_last_push_approval": false,
                  "required_approving_review_count": 2,
                  "required_review_thread_resolution": true
                }
              },
              {
                "type": "required_status_checks",
                "parameters": {
                  "required_status_checks": [],
                  "strict_required_status_checks_policy": true
                }
              },
              {
                "type": "non_fast_forward"
              },
              {
                "type": "deletion"
              },
              {
                "type": "push"
              },
              {
                "type": "commit_message_pattern",
                "parameters": {
                  "name": "Require issue number in commit",
                  "negate": false,
                  "pattern": ".*#\\d+.*"
                }
              }
            ],
            "bypass_actors": [
              {
                "actor_id": 1,
                "actor_type": "RepositoryRole", 
                "bypass_mode": "always"
              }
            ]
          }
          EOF
          
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/rulesets" \
            -d @protected_branch_ruleset.json || echo "Protected branch ruleset creation failed or already exists"

      - name: Set develop as default branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ steps.check_develop.outputs.develop_exists }}" == "false" ]; then
            echo "Setting develop as default branch..."
            curl -L \
              -X PATCH \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/${{ github.repository }}" \
              -d '{"default_branch":"develop"}' || echo "Failed to set default branch"
          fi

      - name: Output next steps
        run: |
          echo "Repository protection setup completed!"
          echo ""
          echo "Manual steps required:"
          echo "1. Install Claude Code GitHub App: https://github.com/apps/claude-code"
          echo "2. Verify rulesets in repository settings: https://github.com/${{ github.repository }}/settings/rules"
          echo "3. Configure Claude AI as a required reviewer"
          echo ""
          echo "Branch workflow:"
          echo "- Create new branches from 'develop': feature/*, bugfix/*, patch/*" 
          echo "- All commits must include issue number: 'feat: description (#123)'"
          echo "- PRs require author approval + Claude AI approval"